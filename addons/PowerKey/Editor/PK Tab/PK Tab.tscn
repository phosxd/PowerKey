[gd_scene load_steps=7 format=3 uid="uid://dq2ev084rdi4r"]

[ext_resource type="Script" uid="uid://dukqioilv2187" path="res://addons/PowerKey/Editor/PK Tab/PK Tab.gd" id="1_bnfcr"]
[ext_resource type="Texture2D" uid="uid://cj6hwjccreqr7" path="res://addons/PowerKey/Icons/github.svg" id="2_5g1pf"]

[sub_resource type="LabelSettings" id="LabelSettings_07ncw"]
font_size = 26
outline_size = 1

[sub_resource type="LabelSettings" id="LabelSettings_1jgx6"]
font_size = 32
shadow_size = 3
shadow_color = Color(0, 0, 0, 1)

[sub_resource type="LabelSettings" id="LabelSettings_fjtuu"]
font_color = Color(1, 0, 0, 1)

[sub_resource type="StyleBoxEmpty" id="StyleBoxEmpty_ppexj"]

[node name="PK Tab" type="VBoxContainer"]
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
size_flags_horizontal = 3
size_flags_vertical = 3
script = ExtResource("1_bnfcr")

[node name="Top Bar" type="HBoxContainer" parent="."]
layout_mode = 2

[node name="Tab Bar" type="TabBar" parent="Top Bar"]
layout_mode = 2
current_tab = 0
clip_tabs = false
scrolling_enabled = false
tab_count = 2
tab_0/title = "Configure"
tab_1/title = "Guide"

[node name="Version Label" type="Label" parent="Top Bar"]
unique_name_in_owner = true
layout_mode = 2
size_flags_horizontal = 10

[node name="Button Github" type="Button" parent="Top Bar"]
unique_name_in_owner = true
custom_minimum_size = Vector2(32, 0)
layout_mode = 2
icon = ExtResource("2_5g1pf")
expand_icon = true

[node name="Tabs" type="TabContainer" parent="."]
layout_mode = 2
size_flags_vertical = 3
current_tab = 0
tabs_visible = false

[node name="Configure" type="VBoxContainer" parent="Tabs"]
layout_mode = 2
metadata/_tab_index = 0

[node name="Top Sep" type="HSeparator" parent="Tabs/Configure"]
layout_mode = 2

[node name="Resources Path" type="HBoxContainer" parent="Tabs/Configure"]
layout_mode = 2

[node name="Title" type="Label" parent="Tabs/Configure/Resources Path"]
layout_mode = 2
tooltip_text = "Path to a GDScript file to be used as the Resources Script.

The script file will be instantiated during runtime & used by PKExpressions."
mouse_filter = 0
text = "Resources Script Path:"

[node name="Text Box" type="TextEdit" parent="Tabs/Configure/Resources Path"]
layout_mode = 2
size_flags_horizontal = 3
placeholder_text = "Enter path to Script..."
scroll_fit_content_height = true
caret_blink = true
caret_multiple = false
draw_control_chars = true
draw_tabs = true
draw_spaces = true

[node name="Max Cached PKExpressions" type="HBoxContainer" parent="Tabs/Configure"]
layout_mode = 2

[node name="Title" type="Label" parent="Tabs/Configure/Max Cached PKExpressions"]
layout_mode = 2
tooltip_text = "How many PKExpressions can be stored in cache memory at any given moment.
If the cache size is not limited, it could potentially waste RAM for storing every expression ever parsed.
I recommend keeping the max cache size low, or even 0 if you don't think you need it.

Before parsing an expression, it searches for a cached expression that has previously been parsed.
This removes the need re-parse the same expression. However if the max cache limit is reached, older cached expressions get deleted & will need to be re-parsed if used again."
mouse_filter = 0
text = "Max Cached PKExpressions:"

[node name="SpinBox" type="SpinBox" parent="Tabs/Configure/Max Cached PKExpressions"]
layout_mode = 2
max_value = 500.0

[node name="Debug" type="VBoxContainer" parent="Tabs/Configure"]
layout_mode = 2

[node name="Title" type="Label" parent="Tabs/Configure/Debug"]
layout_mode = 2
text = "Debug:"
label_settings = SubResource("LabelSettings_07ncw")

[node name="Separator" type="HSeparator" parent="Tabs/Configure/Debug"]
layout_mode = 2

[node name="Print Any Processed" type="HBoxContainer" parent="Tabs/Configure/Debug"]
layout_mode = 2

[node name="Title" type="Label" parent="Tabs/Configure/Debug/Print Any Processed"]
layout_mode = 2
text = "Print any PKExpression processed:"

[node name="Toggle" type="CheckButton" parent="Tabs/Configure/Debug/Print Any Processed"]
layout_mode = 2

[node name="Warning Tag Sep" type="HSeparator" parent="Tabs/Configure"]
layout_mode = 2
size_flags_vertical = 10

[node name="Warning Tag" type="HBoxContainer" parent="Tabs/Configure"]
visible = false
layout_mode = 2
size_flags_horizontal = 4

[node name="Icon" type="CenterContainer" parent="Tabs/Configure/Warning Tag"]
layout_mode = 2

[node name="Background" type="ColorRect" parent="Tabs/Configure/Warning Tag/Icon"]
custom_minimum_size = Vector2(30, 35)
layout_mode = 2
color = Color(0.6881, 0.170417, 0.158828, 1)

[node name="Subject" type="Label" parent="Tabs/Configure/Warning Tag/Icon"]
custom_minimum_size = Vector2(0, 50)
layout_mode = 2
text = "!"
label_settings = SubResource("LabelSettings_1jgx6")

[node name="Label 1" type="Label" parent="Tabs/Configure/Warning Tag"]
layout_mode = 2
text = "Resources Script Path not found."
label_settings = SubResource("LabelSettings_fjtuu")

[node name="Guide" type="VBoxContainer" parent="Tabs"]
visible = false
layout_mode = 2
metadata/_tab_index = 1

[node name="Tabs" type="TabContainer" parent="Tabs/Guide"]
layout_mode = 2
size_flags_vertical = 3
tab_alignment = 1
current_tab = 0

[node name="Getting Started" type="RichTextLabel" parent="Tabs/Guide/Tabs"]
layout_mode = 2
bbcode_enabled = true
text = "For additional help, don't hesitate to ask in the [color=royal_blue][url=https://dsc.gg/sohp]Discord Server[/url][/color]. If you find any issues please report them on the [color=royal_blue][url=https://github.com/phosxd/PowerKey]Github Repo[/url][/color].

[font_size=30]Assigning a Script:[/font_size]
To use PowerKey, you will need to create a GDScript file to hold all your variables.
[ol] Create a new GDScript file that extends Node.
 In your Script, load any & all resources you plan to use. You can also run any logic needed in the \"_ready\" function, just make sure your variables are defined in the Scripts globals if you wan't to use them.
 Copy your Script file's path then paste it into the \"Resource Script Path\" text box.
 All done! Now you can access all variables defined in that script.[/ol]"
metadata/_tab_index = 0

[node name="Global Translations" type="ScrollContainer" parent="Tabs/Guide/Tabs"]
visible = false
layout_mode = 2
metadata/_tab_index = 1

[node name="VBox" type="VBoxContainer" parent="Tabs/Guide/Tabs/Global Translations"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 3
theme_override_constants/separation = 0

[node name="1" type="RichTextLabel" parent="Tabs/Guide/Tabs/Global Translations/VBox"]
layout_mode = 2
focus_mode = 2
bbcode_enabled = true
text = "In the Resources script you can define a variable with the name [color=slate_gray]TRANSLATIONS[/color] which will be used by PowerKey to translate values across all Nodes.

The [color=slate_gray]TRANSLATIONS[/color] variable should follow the following format."
fit_content = true
scroll_active = false
selection_enabled = true
drag_and_drop_selection_enabled = false

[node name="guide_gtr_layout_code1" type="TextEdit" parent="Tabs/Guide/Tabs/Global Translations/VBox"]
unique_name_in_owner = true
self_modulate = Color(0.74978, 0.74978, 0.74978, 1)
layout_mode = 2
theme_override_styles/focus = SubResource("StyleBoxEmpty_ppexj")
text = "@onready var TRANSLATIONS:Array[Array] = [
	[property_name:String, key:Variant, value:Variant],
]"
editable = false
scroll_fit_content_height = true
draw_tabs = true

[node name="2" type="RichTextLabel" parent="Tabs/Guide/Tabs/Global Translations/VBox"]
layout_mode = 2
size_flags_vertical = 3
focus_mode = 2
bbcode_enabled = true
text = "The Node's property (specified in [color=slate_gray]property_name[/color]) is set to the [color=slate_gray]value[/color] only if the [color=slate_gray]key[/color] matches the current value of the Node's property."
scroll_active = false
selection_enabled = true
drag_and_drop_selection_enabled = false

[node name="PKExpressions" type="RichTextLabel" parent="Tabs/Guide/Tabs"]
visible = false
layout_mode = 2
focus_mode = 2
bbcode_enabled = true
text = "When you activated PowerKey in your project, it added a custom \"PKExpressions\" dropdown in the Inspector. Navigate to the \"PKExpressions\" dropdown located under the \"Node\" category. Expanding the dropdown will show a text field where you can enter all your expressions. You can also use the \"Builder\" button within the dropdown to show a menu in which you can interactively write a PKExpression instead of dealing with raw text.

Each type of PKExpression is explained below.

[font_size=30][color=cornflower_blue]\"Assign\" Type:[/color][/font_size]
This expression type will set a value (from the Resources script) to a property of the Node once initialized then never again, unless explicitly re-evaluated. You CANNOT call functions or perform any logic within this expression type.
[font_size=23]Schemas:[/font_size]
[ul] [color=slate_gray]A:<node_property> <resources_value>[/color].
[/ul]
[font_size=23]Meanings:[/font_size]
[ul] [color=slate_gray]node_property[/color]: The property of the Node to set the value on.
 [color=slate_gray]resources_value[/color]: The value, provided by the Resources script, to set on the [color=slate_gray]node_property[/color].
[/ul]
[font_size=23]Examples:[/font_size]
Valid?
[ul] Yes: [color=slate_gray]A:text some_string[/color].
 Yes: [color=slate_gray]A:text some_array.24[/color].
 Yes: [color=slate_gray]A:text some_dictionary.some_string[/color].
 Yes: [color=slate_gray]A:size some_vector2[/color].
 No: [color=slate_gray]A some_value[/color].
 No: [color=slate_gray]A:text some string[/color].
 No: [color=slate_gray]A:text some_dictionary[lb]'some_string'[rb][/color].
 No: [color=slate_gray]A:text some_array[lb]24[rb][/color].
 No: [color=slate_gray]A:text some_array.-24[/color].
[/ul]

[font_size=30][color=cornflower_blue]\"Link\" Type:[/color][/font_size]
This expression type will set a value (from the Resources script) to a property of the Node, much like the \"Assign\" type. However there is one key difference, this expression type will update the Node's property with the Resources script's value every `<frequency>` seconds. If no frequency is defined, it updates every frame.
[font_size=23]Schemas:[/font_size]
[ul] [color=slate_gray]L:<node_property> <resources_value>[/color].
 [color=slate_gray]L:<node_property>,<frequency> <resources_value>[/color].
[/ul]
[font_size=23]Meanings:[/font_size]
[ul] [color=slate_gray]node_property[/color]: The property of the Node to set the value on.
 [color=slate_gray]frequency[/color]: The number of seconds between each update. If undefined, uses [color=slate_gray]0.0[/color] (every frame).
 [color=slate_gray]resources_value[/color]: The value, provided by the Resources script, to set on the [color=slate_gray]node_property[/color].
[/ul]
[font_size=23]Examples:[/font_size]
(\"Assign\" expression type examples apply) Valid?
[ul] Yes: [color=slate_gray]L:text some_string[/color].
 Yes: [color=slate_gray]L:text,1.5 some_string[/color].
 Yes: [color=slate_gray]L:text,100 some_string[/color].
 No: [color=slate_gray]L:text,-1.5 some_string[/color].
 No: [color=slate_gray]L:text,not_a_number some_string[/color].
[/ul]

[font_size=30][color=cornflower_blue]\"Execute\" Type:[/color][/font_size]
This expression type lets you execute any GDScript code on the Node. The code is NOT validated before processing, so use this at your own risk! Use [color=slate_gray]S[/color] instead of [color=slate_gray]self[/color] to access the Node, use [color=slate_gray]PK[/color] to access the Resources script. All [color=slate_gray]GlobalScope[/color] variables/functions are available to use in this expression type.
[font_size=23]Schemas:[/font_size]
[ul] [color=slate_gray]E <code>[/color].
[/ul]
[font_size=23]Examples:[/font_size]
Valid?
[ul] Yes: [color=slate_gray]E print('hello world')[/color].
 Yes: [color=slate_gray]E PK.some_function()[/color].
 Yes: [color=slate_gray]E S.text = 'some text'[/color].
 Yes: [color=slate_gray]E var something = 0; print(something)[/color].
[/ul]

[font_size=30][color=cornflower_blue]\"Eval\" Type:[/color][/font_size]
This expression type lets you safely execute a Godot Expression on the Node. The result of the GDExpression is passed onto the specified Node property. The only drawbacks to using this expression type are that the error catching is not good & it is slightly more expensive to both compute & parse (compared to \"Assign\" expression type).
Use [color=slate_gray]S[/color] instead of [color=slate_gray]self[/color] to access the Node, use [color=slate_gray]PK[/color] to access the Resources script. All [color=slate_gray]GlobalScope[/color] variables/functions are available to use in this expression type.
[font_size=23]Schemas:[/font_size]
[ul] [color=slate_gray]V:<node_property> <gd_expression>[/color].
[/ul]
[font_size=23]Meanings:[/font_size]
[ul] [color=slate_gray]node_property[/color]: The property of the Node to set the result of the GDExpression on.
 [color=slate_gray]gd_expression[/color]: The GDExpression to execute on the Node.
[/ul]
[font_size=23]Examples:[/font_size]
Valid?
[ul] Yes: [color=slate_gray]V:text PK.some_string[/color].
 Yes: [color=slate_gray]V:text PK.some_array_of_strings[0][/color].
 Yes: [color=slate_gray]V:scale 1+1[/color].
 Yes: [color=slate_gray]V:text 'some string and %s' % S.text[[/color].
 Yes: [color=slate_gray]V:text PK.get_some_string()[/color].
 No: [color=slate_gray]V:text var something = 0[/color].
 No: [color=slate_gray]V 1+1[/color]."
selection_enabled = true
drag_and_drop_selection_enabled = false
metadata/_tab_index = 2

[connection signal="tab_changed" from="Top Bar/Tab Bar" to="." method="_on_tab_bar_tab_changed"]
[connection signal="pressed" from="Top Bar/Button Github" to="." method="_on_button_github_pressed"]
[connection signal="text_changed" from="Tabs/Configure/Resources Path/Text Box" to="." method="_on_resources_script_path_text_changed"]
[connection signal="value_changed" from="Tabs/Configure/Max Cached PKExpressions/SpinBox" to="." method="_on_max_cached_pkexpressions_value_changed"]
[connection signal="toggled" from="Tabs/Configure/Debug/Print Any Processed/Toggle" to="." method="_on_debug_option_1_toggled"]
